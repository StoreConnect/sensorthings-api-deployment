{{- $app := include "app" . -}}
{{- $component := "db" -}}
{{- $fullName := printf "%s-%s" $app $component -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    chart: {{ include "chart" . }}
    app: {{ $app }}
    component: {{ $component }}
spec:
  selector:
    matchLabels:
      heritage: {{ .Release.Service }}
      release: {{ .Release.Name }}
      chart: {{ include "chart" . }}
      app: {{ $app }}
      component: {{ $component }}
  template:
    metadata:
      labels:
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
        chart: {{ include "chart" . }}
        app: {{ $app }}
        component: {{ $component }}
    spec:
      containers:
        - name: {{ $fullName }}
          image: mdillon/postgis:10
          imagePullPolicy: IfNotPresent
          ports:
            - name: postgresql
              containerPort: 5432
          {{- if .Values.frost.db.volume.enabled }}
          volumeMounts:
            - name: {{ $fullName }}
              mountPath: /var/lib/postgresql/data
          {{- end }}
          env:
            - name: POSTGRES_DB
              value: {{ .Values.frost.db.database }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ $app }}-secret
                  key: db.username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $app }}-secret
                  key: db.password
      {{- if .Values.frost.db.volume.enabled }}
      volumes:
        - name: {{ $fullName }}
          persistentVolumeClaim:
            claimName: {{ $fullName }}-volume-claim
      {{- end -}}